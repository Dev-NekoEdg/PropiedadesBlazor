@page "/estates/new"
@using Propiedades.DTOs
@using Propiedades.Repositories
@using System.ComponentModel.DataAnnotations
@inject IEstateRepository repository;
@inject ICategoryRepository categoryRepository;
@inject NavigationManager navManager;
@inject IJSRuntime jsRuntime;

<div class="card">
    <div class="card-header">
        <h3>New Category</h3>
    </div>
    <div class="card-body">
        <EditForm Model="@estate" FormName="NewEstateForm" OnValidSubmit="Save">
            <DataAnnotationsValidator></DataAnnotationsValidator>

            <div class="mb-3">
                <label class="form-label">Name</label>
                <InputText @bind-Value="estate.Name" class="form-control" placeholder="Ranch"></InputText>
                <ValidationMessage For="() => estate.Name"></ValidationMessage>
            </div>

            <div class="mb-3">
                <label class="form-label">Description</label>
                <InputTextArea @bind-Value="estate.Description" rows="2" class="form-control" placeholder=""></InputTextArea>
            </div>

            <div class="mb-3">
                <label class="form-label">Category</label>
                <InputSelect @bind-Value="estate.CategoryId" class="form-control">
                    @foreach (var category in categories)
                    {
                        <option value="@category.Id">@category.Name</option>
                    }
                </InputSelect>
                @* <InpNumber @bind-Value="estate.CategoryId" class="form-control"></InpNumber> *@
            </div>

            <div class="mb-3">
                <label class="form-label">Area</label>
                <InputNumber @bind-Value="estate.Area" class="form-control" placehoolder="mt2" ></InputNumber>
            </div>

            <div class="mb-3">
                <label class="form-label"># Rooms</label>
                <InputNumber @bind-Value="estate.Rooms" class="form-control"></InputNumber>
            </div>

            <div class="mb-3">
                <label class="form-label"># Bathrooms</label>
                <InputNumber @bind-Value="estate.Bathrooms" class="form-control"></InputNumber>
            </div>

            <div class="mb-3">
                <label class="form-label"># Parkinglots</label>
                <InputNumber @bind-Value="estate.Parkinglots" class="form-control"></InputNumber>
            </div>

            <div class="mb-3">
                <label class="form-label">$ Price(USD) </label>
                <InputNumber @bind-Value="estate.Price" class="form-control"></InputNumber>
            </div>

            <div class="mb-3">
                <label class="form-label">Is Active </label>
                <InputCheckbox @bind-Value="estate.IsActive" class="form-check-input"></InputCheckbox>
            </div>

            <ValidationSummary></ValidationSummary>
            <NavLink class="btn btn-secondary" href="categories"><i class="bi bi-box-arrow-left"></i> Back to Categories</NavLink>
            <button type="submit" class="btn btn-success"><i class="bi bi-check2-square"></i> Save</button>
        </EditForm>
    </div>
</div>
@code {
    private List<CategoryDTO> categories = new List<CategoryDTO>();
    private EstateDTO estate = new EstateDTO();

    protected override async Task OnInitializedAsync()
    {
        categories = (await categoryRepository.GetAllAsync()).ToList();

        //return base.OnInitializedAsync();
    }


    private async Task Save()
    {
        var validation = await repository.GetByNameAsync(estate.Name);

        if (validation != null)
        {
            await jsRuntime.ToastRError("Estate", "This categorie is already created.");
            return;
        }

        // Save Category
        var savedEstate = await repository.CreateAsync(estate);
        await jsRuntime.ToastRSuccess("Estate", "Categorie created successfully.");

        navManager.NavigateTo("estates");
    }
}
